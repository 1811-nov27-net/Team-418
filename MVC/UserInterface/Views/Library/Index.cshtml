@model IEnumerable<UserInterface.Models.SongViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="AddSong">Add New Song</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th class="card-header">
                <a class="text-black-50" asp-action="SortByName">Name</a>
            </th>
            <th class="card-header">
                <a class="text-black-50" asp-action="SortByArtist">Artist</a>
            </th>
            <th class="card-header">
                <a class="text-black-50" asp-action="SortByAlbum">Album</a>
            </th>
            <th class="card-header">
                <a class="text-black-50">@Html.DisplayNameFor(model => model.Link)</a>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            @*TODO: Update SongDetails action to something meaningful*@
            <td>
                <a class="text-black-50" asp-action="SongDetails">
                    @Html.DisplayFor(modelItem => item.Name)
                </a>
            </td>
            <td>
                <a class="text-black-50" asp-action="SongDetails">
                    @Html.DisplayFor(modelItem => item.Artist)
                </a>
            </td>
            <td>
                <a class="text-black-50" asp-action="SongDetails">
                    @Html.DisplayFor(modelItem => item.Album)
                </a>
            </td>
            <td>
                <a class="text-black-50" asp-action="SongDetails">
                    @Html.DisplayFor(modelItem => item.Link)
                </a>
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new       { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "RemoveSong", new   { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
